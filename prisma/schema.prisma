generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  username      String
  email         String
  password      String
  token         String?
  locations     Location[]
  notifications Notification[]
}

model Location {
  id            String         @id @default(uuid())
  name          String
  devices       Device[]
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  notifications Notification[]
}

model ConnectedDevices {
  id           String         @id @default(uuid())
  devices      Device[]
  data         Data[]
  Notification Notification[]
}

model Device {
  id                String           @id @default(uuid())
  connectedDevice   ConnectedDevices @relation(fields: [connectedDeviceId], references: [id])
  connectedDeviceId String
  location          Location         @relation(fields: [locationId], references: [id])
  locationId        String
  data              Data[]
}

model Data {
  id                String           @id @default(uuid())
  AQI               Int
  AQIStatus         String
  dustPercentage    Int
  humidity          Int
  temperatureC      Int
  temperatureF      Int
  createdAt         DateTime         @default(now())
  connectedDevice   ConnectedDevices @relation(fields: [connectedDeviceId], references: [id])
  connectedDeviceId String
  device            Device?          @relation(fields: [deviceId], references: [id])
  deviceId          String?
  notifications     Notification[]
}

model Notification {
  id                 String           @id @default(uuid())
  title              String
  description        String
  status             String
  data               Data             @relation(fields: [dataId], references: [id])
  dataId             String
  location           Location         @relation(fields: [locationId], references: [id])
  locationId         String
  createdAt          DateTime         @default(now())
  connectedDevice    ConnectedDevices @relation(fields: [connectedDevicesId], references: [id])
  user               User             @relation(fields: [userId], references: [id])
  userId             String
  connectedDevicesId String
}
